//- Все примеси в этом файле должны начинаться c имени блока (Dropdown)

mixin Dropdown(typeOfDropdown, mods)

  //- Принимает:
  //-   text    {string} - текст
  //-   mods    {string} - список модификаторов
  //- Вызов:
        +Dropdown('Текст', 'some-mod')

  -
    // список модификаторов
    var allMods = '';
    if(typeof(mods) !== 'undefined' && mods) {
      var modsList = mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' Dropdown--' + modsList[i].trim();
      }
    }
    let values = {
      name:          '',
      selectText:    '',
      itemText1:     '',
      itemText2:     '',
      itemText3:     '',
      itemValue1:    '',
      itemValue2:    '',
      itemValue3:    '',
      defaultClass1: '',
      defaultClass2: '',
      defaultClass3: '',
      resetButton:   ''};
    if (typeOfDropdown === 'guests') {
      values.name = 'гости';
      values.selectText = 'Сколько гостей';
      values.itemText1 = 'взрослые';
      values.itemText2 = 'дети';
      values.itemText3 = 'младенцы';
      values.itemValue1 = '0';
      values.itemValue2 = '0';
      values.itemValue3 = '0';
      values.defaultClass1 = 'Dropdown__minus-button--disabled';
      values.defaultClass2 = 'Dropdown__minus-button--disabled';
      values.defaultClass3 = 'Dropdown__minus-button--disabled';
      values.resetButton = 'Dropdown__reset-button--disabled';
    } else if (typeOfDropdown === 'rooms') {
      values.name = 'удобства номера';
      values.selectText = '2 спальни, 2 кровати';
      values.itemText1 = 'спальни';
      values.itemText2 = 'кровати';
      values.itemText3 = 'ванные комнаты';
      values.itemValue1 = '2';
      values.itemValue2 = '2';
      values.itemValue3 = '0';
      values.defaultClass1 = '';
      values.defaultClass2 = '';
      values.defaultClass3 = 'Dropdown__minus-button--disabled';
      values.resetButton = '';
    }

  .Dropdown(class=allMods)&attributes(attributes)
    label.Dropdown__label
      .Dropdown__text= values.name
      button.Dropdown__select
        p.Dropdown__select-text= values.selectText
    .Dropdown__menu
      .Dropdown__menu-item
        p.Dropdown__item-text= values.itemText1
        .Dropdown__item-buttons
          button.Dropdown__minus-button(class=values.defaultClass1)
            p.Dropdown__minus-button-text -
          input.Dropdown__number(type='text', value=values.itemValue1, name=typeOfDropdown, readonly)
          button.Dropdown__plus-button
            p.Dropdown__plus-button-text +
      .Dropdown__menu-item
        p.Dropdown__item-text= values.itemText2
        .Dropdown__item-buttons
          button.Dropdown__minus-button(class=values.defaultClass2)
            p.Dropdown__minus-button-text -
          input.Dropdown__number(type='text', value=values.itemValue2, name=typeOfDropdown, readonly)
          button.Dropdown__plus-button
            p.Dropdown__plus-button-text +
      .Dropdown__menu-item
        p.Dropdown__item-text= values.itemText3
        .Dropdown__item-buttons
          button.Dropdown__minus-button(class=values.defaultClass3)
            p.Dropdown__minus-button-text -
          input.Dropdown__number(type='text', value=values.itemValue3, name=typeOfDropdown, readonly)
          button.Dropdown__plus-button
            p.Dropdown__plus-button-text +
      .Dropdown__menu-bottom-buttons
        button.Dropdown__reset-button(class=values.resetButton)
          p.Dropdown__reset-button-text очистить
        button.Dropdown__apply-button
          p.Dropdown__apply-button-text применить
